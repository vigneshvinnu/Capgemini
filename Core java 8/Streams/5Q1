import java.util.*;
class Fruit {
    public String name;
    private int calories;
	private int price;
    private String color;
    public Fruit(String name, int calories, int price, String color) {
		super();
		this.name = name;
		this.calories = calories;
		this.price = price;
		this.color = color;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getCalories() {
		return calories;
	}
	public void setCalories(int calories) {
		this.calories = calories;
	}
	public int getPrice() {
		return price;
	}
	public void setPrice(int price) {
		this.price = price;
	}
	public String getColor() {
		return color;
	}
	public void setColor(String color) {
		this.color = color;
	}
    
}
public class Assignment5Q1 {

    public static List<Fruit> reverseSort(ArrayList<Fruit> fruits) 
    {
    	
    	
		return fruits;
    	
    }
    public static ArrayList<Fruit> sort(ArrayList<Fruit> Fruits)
    {
    
    	return (ArrayList<Fruit>) Fruits;
    }

    public static ArrayList<Fruit> filterRedSortPrice(ArrayList<Fruit> FRuits)
    {
    	
    	return (ArrayList<Fruit>) FRuits;
    }

    @SuppressWarnings("static-access")
	public static void main(String[] args) 
    {
    	
    	
    	ArrayList<Fruit> Fruits=new ArrayList<Fruit>();
    	Fruits.add(new Fruit("Custard Apple",1000,100,"Green"));
    	 Fruits.add(new Fruit("Water melon",10,50,"Light Green"));
    	 Fruits.add(new Fruit("oranges",30,100,"Orange"));
    	 Fruits.add(new Fruit("Apple",400,200,"Red"));
    	 
    	ArrayList<Fruit> Fruits1=new ArrayList<Fruit>(); 
		Fruits1=(ArrayList<Fruit>) reverseSort(Fruits);
    	Collections.reverse(Fruits1);
    	Fruits1.stream().filter(p->p.getCalories()<100).forEach((fruit)->System.out.println(fruit.getName()+"   "+fruit.getCalories()));
   
    	ArrayList<Fruit> Fruits2=new ArrayList<Fruit>(); 
		Fruits2=(ArrayList<Fruit>) sort(Fruits);
    	
    	Fruits2.stream().sorted(Comparator.comparing(Fruit::getColor)).forEach((fruit)->System.out.println(fruit.getName()));
    	
    	
    	ArrayList<Fruit> Fruits3=new ArrayList<Fruit>(); 
		Fruits3=(ArrayList<Fruit>) filterRedSortPrice(Fruits);
    	  Fruits3.stream().filter(p->p.getColor()=="Red").forEach((fruit)->System.out.println(fruit.getName()));    	
     }

}
